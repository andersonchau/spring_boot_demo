buildscript {
	ext {
		springBootVersion = '2.3.4.RELEASE'
		queryDslVersion = '4.3.1'
		javaxVersion = '1.3.2'
		lombokVersion = '1.18.14'
	}
}

plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'idea'
}
idea {
	module {
		sourceDirs += file('generated/')
		generatedSourceDirs += file('generated/')
	}
}


group = 'com.and.demo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {



	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//annotationProcessor ("jakarta.persistence:jakarta.persistence-api");




	// Possibly annotation processors for additional Data annotations
	//annotationProcessor("javax.annotation:javax.annotation-api:${javaxVersion}")
	//annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')


	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compile 'commons-codec:commons-codec:1.8'
	implementation 'org.apache.commons:commons-lang3:3.6'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3")
	runtimeOnly 'mysql:mysql-connector-java'
	compileOnly("org.springframework.boot:spring-boot-devtools")
	implementation 'org.springdoc:springdoc-openapi-ui:1.4.6'


	// QueryDSL
	//compile "com.querydsl:querydsl-sql:${queryDslVersion}"
	//implementation ("com.querydsl:querydsl-jpa:${queryDslVersion}")
	//implementation("com.querydsl:querydsl-apt:${queryDslVersion}")
	//annotationProcessor("com.querydsl:querydsl-apt:${queryDslVersion}:jpa")
	// QueryDSL
	implementation("com.querydsl:querydsl-core:${queryDslVersion}")
	implementation("com.querydsl:querydsl-jpa:${queryDslVersion}")
	//关键地方(记得开启annotationProcessor)
	annotationProcessor("com.querydsl:querydsl-apt:${queryDslVersion}:jpa",
			"org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final",
			"javax.annotation:javax.annotation-api:1.3.2",
			"org.projectlombok:lombok")

	// Lombok（记得安装IDEA插件）
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	implementation("org.projectlombok:lombok:${lombokVersion}")

}

test {
	useJUnitPlatform()
}
